{"ast":null,"code":"var _jsxFileName = \"/Users/ericaspitz/turing/mod4/SalarySight-FE/src/Components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Route, Switch } from 'react-router-dom';\nimport Header from \"../Header/Header\";\nimport Cover from \"../Cover/Cover\";\nimport SlideDrawer from \"../Form/SlideDrawer\";\nimport Backdrop from \"../Form/Backdrop\";\nimport MainPage from \"../Form/MainPage\";\nimport SalaryCards from \"../SalaryCards/SalaryCards\";\nimport Loader from \"../Loader/Loader\";\nimport NoMatchError from \"../NoMatchError/NoMatchError\";\nimport NotFound from '../NotFound/NotFound';\nimport Error from '../Error/Error';\nimport FilterForm from '../FilterForm/FilterForm';\nimport Results from '../Results/Results';\nimport Form from '../Form/Form';\nimport { useQuery } from '@apollo/client';\nimport { GET_POST } from '../..';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [salaryPosts, setSalaryPosts] = useState([]);\n  const [filterPosts, setFilterPosts] = useState([]);\n  const [filterInput, setFilterInput] = useState('');\n  const [filterError, setFilterError] = useState('');\n  const [input, setInput] = useState('');\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_POST);\n\n  const drawerToggleClickHandler = () => {\n    setDrawerOpen(!drawerOpen);\n  };\n\n  const backdropClickHandler = () => {\n    setDrawerOpen(false);\n  };\n\n  const handleFilterInput = e => {\n    setFilterInput(e.target.value);\n  };\n\n  const handleInput = e => {\n    setInput(e.target.value);\n  };\n\n  const clearFilterForm = e => {\n    setFilterInput('');\n    setFilterPosts([]);\n  };\n\n  useEffect(() => {\n    if (loading) {\n      console.log('loading', loading);\n    } else if (error) {\n      console.log('error', error);\n    } else {\n      setSalaryPosts(data);\n    }\n  }, [data]);\n\n  const filterData = (filterInput, input) => {\n    setFilterPosts([]);\n    setFilterError('');\n    const prop = filterInput.toLowerCase();\n    const matchCards = salaryPosts.posts.filter(post => post[prop] === input);\n\n    if (matchCards.length !== 0) {\n      setFilterPosts(matchCards);\n    } else if (matchCards.length === 0) {\n      setFilterError('No matches!');\n    } else {\n      return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cover, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainPage, {\n      toggle: drawerToggleClickHandler,\n      show: drawerOpen,\n      close: backdropClickHandler,\n      filterInput: filterInput,\n      handleFilterInput: handleFilterInput,\n      input: input,\n      handleInput: handleInput,\n      filterData: filterData,\n      clearFilterForm: clearFilterForm,\n      data: data.posts,\n      filterPosts: filterPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"YVFSmml2cvoG6BJxZaqS2caxfpE=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App; // <Route to=\"*\" render={() => <Error />}/>\n// <SlideDrawer toggle={drawerToggleClickHandler} show={drawerOpen} />\n// {drawerOpen && <Backdrop close={backdropClickHandler} />}\n//\n// <FilterForm\n//   filterInput={filterInput}\n//   handleFilterInput={handleFilterInput}\n//   input={input}\n//   handleInput={handleInput}\n//   filterData={filterData}\n//   clearFilterForm={clearFilterForm}/>\n// {loading && <Loader />}\n// {!loading && error && <Error err={error} />}\n// {!loading && !error && filterPosts.length === 0 && !filterError && <SalaryCards data={data.posts}/>}\n// {!loading && !error && filterPosts.length !== 0 && <Results filterPosts={filterPosts}/>}\n// {!loading && !error && filterPosts.length !== 0 && <SalaryCards data={filterPosts}/>}\n// {!loading && filterError && filterPosts.length === 0 && <NoMatchError />}\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ericaspitz/turing/mod4/SalarySight-FE/src/Components/App/App.js"],"names":["useState","useEffect","Route","Switch","Header","Cover","SlideDrawer","Backdrop","MainPage","SalaryCards","Loader","NoMatchError","NotFound","Error","FilterForm","Results","Form","useQuery","GET_POST","App","drawerOpen","setDrawerOpen","salaryPosts","setSalaryPosts","filterPosts","setFilterPosts","filterInput","setFilterInput","filterError","setFilterError","input","setInput","data","loading","error","drawerToggleClickHandler","backdropClickHandler","handleFilterInput","e","target","value","handleInput","clearFilterForm","console","log","filterData","prop","toLowerCase","matchCards","posts","filter","post","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Route, Switch } from 'react-router-dom'\nimport Header from \"../Header/Header\";\nimport Cover from \"../Cover/Cover\";\nimport SlideDrawer from \"../Form/SlideDrawer\";\nimport Backdrop from \"../Form/Backdrop\";\nimport MainPage from \"../Form/MainPage\";\nimport SalaryCards from \"../SalaryCards/SalaryCards\";\nimport Loader from \"../Loader/Loader\";\nimport NoMatchError from \"../NoMatchError/NoMatchError\";\nimport NotFound from '../NotFound/NotFound';\nimport Error from '../Error/Error';\nimport FilterForm from '../FilterForm/FilterForm';\nimport Results from '../Results/Results';\nimport Form from '../Form/Form'\nimport { useQuery } from '@apollo/client';\nimport { GET_POST } from '../..';\nimport \"./App.css\";\n\nconst App = () => {\n  const [drawerOpen, setDrawerOpen] = useState(false)\n  const [salaryPosts, setSalaryPosts] = useState([])\n  const [filterPosts, setFilterPosts] = useState([])\n  const [filterInput, setFilterInput] = useState('')\n  const [filterError, setFilterError] = useState('')\n  const [input, setInput] = useState('')\n  const { data, loading, error } = useQuery(GET_POST)\n\nconst drawerToggleClickHandler = () => {\n  setDrawerOpen(!drawerOpen)\n};\n\nconst backdropClickHandler = () => {\n  setDrawerOpen(false)\n};\n\nconst handleFilterInput = (e) => {\n  setFilterInput(e.target.value)\n}\n\nconst handleInput = (e) => {\n  setInput(e.target.value)\n}\n\nconst clearFilterForm = (e) => {\n  setFilterInput('')\n  setFilterPosts([])\n}\n\nuseEffect(() => {\n  if (loading) {\n    console.log('loading', loading)\n  } else if (error) {\n    console.log('error', error)\n  } else {\n    setSalaryPosts(data)\n  }\n}, [data])\n\nconst filterData = (filterInput, input) => {\n  setFilterPosts([])\n  setFilterError('')\n  const prop = filterInput.toLowerCase()\n  const matchCards = salaryPosts.posts.filter(post => post[prop] === input)\n  if (matchCards.length !== 0) {\n    setFilterPosts(matchCards)\n  } else if (matchCards.length === 0) {\n    setFilterError('No matches!')\n  } else {\n    return null;\n  }\n}\n\n  return (\n    <div>\n      <Header />\n      <Cover />\n      <MainPage\n        toggle={drawerToggleClickHandler}\n        show={drawerOpen}\n        close={backdropClickHandler}\n        filterInput={filterInput}\n        handleFilterInput={handleFilterInput}\n        input={input}\n        handleInput={handleInput}\n        filterData={filterData}\n        clearFilterForm={clearFilterForm}\n        data={data.posts}\n        filterPosts={filterPosts}\n        />\n\n    </div>\n  );\n}\n\nexport default App;\n// <Route to=\"*\" render={() => <Error />}/>\n\n// <SlideDrawer toggle={drawerToggleClickHandler} show={drawerOpen} />\n// {drawerOpen && <Backdrop close={backdropClickHandler} />}\n//\n// <FilterForm\n//   filterInput={filterInput}\n//   handleFilterInput={handleFilterInput}\n//   input={input}\n//   handleInput={handleInput}\n//   filterData={filterData}\n//   clearFilterForm={clearFilterForm}/>\n// {loading && <Loader />}\n// {!loading && error && <Error err={error} />}\n// {!loading && !error && filterPosts.length === 0 && !filterError && <SalaryCards data={data.posts}/>}\n// {!loading && !error && filterPosts.length !== 0 && <Results filterPosts={filterPosts}/>}\n// {!loading && !error && filterPosts.length !== 0 && <SalaryCards data={filterPosts}/>}\n// {!loading && filterError && filterPosts.length === 0 && <NoMatchError />}\n"]},"metadata":{},"sourceType":"module"}