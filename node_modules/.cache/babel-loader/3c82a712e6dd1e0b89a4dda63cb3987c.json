{"ast":null,"code":"export const cleanFilters = filterObj => {\n  const categories = Object.keys(filterObj);\n  const cleanedFilters = categories.reduce((acc, category) => {\n    acc[category] = Object.entries(filterObj[category]).filter(obj => obj[1] === true).map(obj => obj[0]);\n    return acc;\n  }, {\n    gender: [],\n    age: [],\n    program: []\n  });\n  return cleanedFilters;\n};\nexport const filterByCategories = (filterObj, salaryPosts, salaryObj) => {\n  const salaryPostsArr = [...salaryPosts];\n\n  if (salaryObj.HiLo === true) {\n    return salaryPostsArr.sort((a, b) => b.salary - a.salary).filter(post => {\n      return filterObj.gender.length ? filterObj.gender.includes(post.gender) : post;\n    }).filter(post => {\n      return filterObj.age.length ? filterObj.age.includes(post.age) : post;\n    }).filter(post => {\n      return filterObj.program.length ? filterObj.program.includes(post.program) : post;\n    });\n  } else if (salaryObj.LoHi === true) {\n    return salaryPostsArr.sort((a, b) => a.salary - b.salary).filter(post => {\n      return filterObj.gender.length ? filterObj.gender.includes(post.gender) : post;\n    }).filter(post => {\n      return filterObj.age.length ? filterObj.age.includes(post.age) : post;\n    }).filter(post => {\n      return filterObj.program.length ? filterObj.program.includes(post.program) : post;\n    });\n  } else {\n    return salaryPostsArr.filter(post => {\n      return filterObj.gender.length ? filterObj.gender.includes(post.gender) : post;\n    }).filter(post => {\n      return filterObj.age.length ? filterObj.age.includes(post.age) : post;\n    }).filter(post => {\n      return filterObj.program.length ? filterObj.program.includes(post.program) : post;\n    });\n  }\n};","map":{"version":3,"sources":["/Users/ericaspitz/turing/mod4/SalarySight-FE/src/Components/FilterForm/helperFunctions.js"],"names":["cleanFilters","filterObj","categories","Object","keys","cleanedFilters","reduce","acc","category","entries","filter","obj","map","gender","age","program","filterByCategories","salaryPosts","salaryObj","salaryPostsArr","HiLo","sort","a","b","salary","post","length","includes","LoHi"],"mappings":"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","sourcesContent":["export const cleanFilters = (filterObj) => {\n  const categories = Object.keys(filterObj)\n  const cleanedFilters = categories.reduce((acc, category) => {\n    acc[category] = Object.entries(filterObj[category]).filter(obj => obj[1] === true).map(obj => obj[0])\n    return acc\n  }, {gender: [], age: [], program: []})\n  return cleanedFilters\n}\n\nexport const filterByCategories = (filterObj, salaryPosts, salaryObj) => {\n  const salaryPostsArr = [...salaryPosts]\n  if(salaryObj.HiLo === true){\n    return salaryPostsArr.sort((a, b) => b.salary - a.salary)\n    .filter(post => {\n     return filterObj.gender.length ? filterObj.gender.includes(post.gender) : post;\n   })\n   .filter(post => {\n     return filterObj.age.length ? filterObj.age.includes(post.age) : post;\n   })\n   .filter(post => {\n     return filterObj.program.length ? filterObj.program.includes(post.program) : post;\n   })\n  } else if (salaryObj.LoHi === true){\n    return salaryPostsArr.sort((a, b) => a.salary - b.salary)\n    .filter(post => {\n     return filterObj.gender.length ? filterObj.gender.includes(post.gender) : post;\n   })\n   .filter(post => {\n     return filterObj.age.length ? filterObj.age.includes(post.age) : post;\n   })\n   .filter(post => {\n     return filterObj.program.length ? filterObj.program.includes(post.program) : post;\n   })\n  } else {\n  return salaryPostsArr.filter(post => {\n     return filterObj.gender.length ? filterObj.gender.includes(post.gender) : post;\n   })\n   .filter(post => {\n     return filterObj.age.length ? filterObj.age.includes(post.age) : post;\n   })\n   .filter(post => {\n     return filterObj.program.length ? filterObj.program.includes(post.program) : post;\n   })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}