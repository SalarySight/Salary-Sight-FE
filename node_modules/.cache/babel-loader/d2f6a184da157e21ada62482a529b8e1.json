{"ast":null,"code":"var _jsxFileName = \"/Users/darlaevans/turing/mod4/salary-sight/src/APICalls.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from \"@apollo/client\";\nimport { Query } from \"react-apollo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_POSTS = gql`\n    query {\n      posts {\n        id\n        name\n        company\n        salary\n        previousEducation\n        bootCampType\n        devTitle\n        comments\n        state\n        jobHuntDuration\n        gender\n        age\n        yearsOfExperience\n      }\n    }\n`;\n\nfunction APICalls() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_POSTS);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(Query, {\n    query: GET_POSTS,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      name: \"posts\",\n      children: data.posts.map(post => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(APICalls, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = APICalls;\nexport default APICalls;\n\nvar _c;\n\n$RefreshReg$(_c, \"APICalls\");","map":{"version":3,"sources":["/Users/darlaevans/turing/mod4/salary-sight/src/APICalls.js"],"names":["React","ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","Query","GET_POSTS","APICalls","loading","error","data","message","posts","map","post"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,GALF,QAMO,gBANP;AAOA,SAASC,KAAT,QAAsB,cAAtB;;AAEA,MAAMC,SAAS,GAAGF,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;;AAoBA,SAASG,QAAT,GAAoB;AAAA;;AAClB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACG,SAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B;AAEX,sBACE,QAAC,KAAD;AAAO,IAAA,KAAK,EAAEL,SAAd;AAAA,2BACA;AAAK,MAAA,IAAI,EAAC,OAAV;AAAA,gBACGI,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAeC,IAAI,iBAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAfQP,Q;UAC0BJ,Q;;;KAD1BI,Q;AAgBT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  gql\n} from \"@apollo/client\";\nimport { Query } from \"react-apollo\";\n\nconst GET_POSTS = gql`\n    query {\n      posts {\n        id\n        name\n        company\n        salary\n        previousEducation\n        bootCampType\n        devTitle\n        comments\n        state\n        jobHuntDuration\n        gender\n        age\n        yearsOfExperience\n      }\n    }\n`;\n\nfunction APICalls() {\n  const { loading, error, data } = useQuery(GET_POSTS);\n\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <Query query={GET_POSTS}>\n    <div name=\"posts\">\n      {data.posts.map(post => (\n        <p>hi</p>\n      ))}\n    </div>\n    </Query>\n  );\n}\nexport default APICalls"]},"metadata":{},"sourceType":"module"}